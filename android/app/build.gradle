apply plugin: "com.android.application"
/**
* MODIFICACIONES REACT-NATIVE-FABRIC
**/
buildscript {
   repositories {
     maven { url 'https://maven.fabric.io/public' }
   }
   dependencies {
     // The Fabric Gradle plugin uses an open ended version to react
     // quickly to Android tooling updates
     classpath 'io.fabric.tools:gradle:1.+'
   }
}

apply plugin: 'io.fabric'
repositories {
   maven { url 'https://maven.fabric.io/public' }
}
/**
* FIN MODIFICACIONES REACT-NATIVE-FABRIC
**/

import com.android.build.OutputFile

project.ext.react = [
    entryFile: "index.js"
]

apply from: "../../node_modules/react-native/react.gradle"


def enableSeparateBuildPerCPUArchitecture = false
//Cambiado para optimizar el código.
//def enableProguardInReleaseBuilds = false
def enableProguardInReleaseBuilds = true

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"

    defaultConfig {
        multiDexEnabled  true
        vectorDrawables.useSupportLibrary true
        applicationId "com.wetdog.babyhelper"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 19
        versionName "1.0.19-alpha"
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_RELEASE_STORE_FILE')) {
                storeFile file(MYAPP_RELEASE_STORE_FILE)
                storePassword MYAPP_RELEASE_STORE_PASSWORD
                keyAlias MYAPP_RELEASE_KEY_ALIAS
                keyPassword MYAPP_RELEASE_KEY_PASSWORD
            }
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    // applicationVariants are e.g. debug, release
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            // For each separate APK per architecture, set a unique version code as described here:
            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits
            def versionCodes = ["armeabi-v7a":1, "x86":2]
            def abi = output.getFilter(OutputFile.ABI)
            if (abi != null) {  // null for the universal-debug, universal-release variants
                output.versionCodeOverride =
                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }
}

dependencies {
    implementation project(':react-native-background-upload')
    implementation(project(':react-native-firebase')) {
        transitive = false
    }
    implementation 'com.android.support:multidex:1.0.0'
    implementation project(':react-native-admob')
    implementation project(':react-native-thumbnail')
    implementation project(':react-native-video')
    implementation project(':react-native-exif')
    implementation project(':react-native-orientation')
    implementation project(':react-native-device-info')
    //implementation project(':react-native-svg')
    implementation project(':react-native-fs')
    implementation project(':react-native-i18n')
    implementation project(':react-native-vector-icons')
    implementation project(':react-native-share')
    implementation project(':react-native-image-crop-picker')
    implementation project(':react-native-fetch-blob')
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "com.android.support:appcompat-v7:23.0.1"
    implementation "com.facebook.react:react-native:+"  // From node_modules
    implementation project(':react-native-fabric')
    implementation('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
       transitive = true;
    }
    //Google-Sigin
    implementation (project(":react-native-google-signin")){
            exclude group: "com.google.android.gms" // very important
    }
    implementation 'com.google.android.gms:play-services-auth:15.0.0'
    // Firebase dependencies
    implementation "com.google.android.gms:play-services-base:15.0.0"
    implementation "com.google.firebase:firebase-core:15.0.2"
    //Para usar Firebase clud messaging
    implementation "com.google.firebase:firebase-messaging:15.0.2"
    implementation 'me.leolin:ShortcutBadger:1.1.21@aar' // <-- Add this line if you wish to use badge on Android
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '26.0.0'
                }
            }
        }
    }
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}

//Añadido para BabyHelper
//React-native-vector-icons
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
apply plugin: 'com.google.gms.google-services'
